{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/todo.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { };\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<mat-toolbar>\\n  <span>To Do List</span>\\n</mat-toolbar>\\n<div>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'to-do-list';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { MatToolbarModule, MatCheckboxModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule } from '@angular/material';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\n\nimport { TodoService } from './todo';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NoopAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\n\nconst routes: Routes = [\n  { path: 'create', component: CreateComponent },\n  { path: 'edit/:id', component: EditComponent },\n  { path: 'list', component: ListComponent },\n  { path: '', redirectTo: 'list', pathMatch: 'full' }\n];\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    MatCheckboxModule,\n    AppRoutingModule,\n    NoopAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule,\n    FormsModule\n  ],\n  providers: [TodoService, { provide: MatCheckboxModule, useValue: 'check' }],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".create-form {\\n    min-width:150px;\\n    width:100%\\n}\\n\\n.field-full-width {\\n    width:100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9jcmVhdGUvY3JlYXRlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2Y7QUFDSjs7QUFFQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvY3JlYXRlL2NyZWF0ZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNyZWF0ZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6MTUwcHg7XG4gICAgd2lkdGg6MTAwJVxufVxuXG4uZmllbGQtZnVsbC13aWR0aCB7XG4gICAgd2lkdGg6MTAwJTtcbn0iXX0= */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class='mat-typography'>\\n      <h3>Create A New To Do</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]='createForm' class='create-form'>\\n\\n      <mat-form-field class='field-full-width'>\\n        <input matInput placeholder='To Do Title' formControlName='title' #title>\\n      </mat-form-field>\\n\\n      <mat-divider></mat-divider>\\n      <br><br>\\n\\n      <button mat-raised-button color='accent' routerLink='/list'>Back</button>\\n      <button type='submit' (click)=\\\"addTodo(title.value)\\\"\\n        [disabled]='createForm.pristine || createForm.invalid' mat-raised-button color='primary'>Save</button>\\n\\n    </form>\\n\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {TodoService} from '../../todo';\nimport {FormGroup, FormBuilder, Validators} from '@angular/forms';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  createForm: FormGroup;\n\n  constructor(private todoService: TodoService, private fb:FormBuilder, private router:Router) { \n    this.createForm = this.fb.group({\n      title: ['', Validators.required],\n      isDone:''\n    });\n  };\n\n  addTodo(title, isDone){\n    this.todoService.addTodo(title).subscribe(()=>{\n      this.router.navigate(['/list']);\n    });\n  };  \n    \n  ngOnInit() {\n  };\n\n};\n","module.exports = \".edit-form {\\n    min-width:150px;\\n    width:100%;\\n}\\n\\n.field-full-width {\\n    width:100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9lZGl0L2VkaXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZixVQUFVO0FBQ2Q7O0FBRUE7SUFDSSxVQUFVO0FBQ2QiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2VkaXQvZWRpdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmVkaXQtZm9ybSB7XG4gICAgbWluLXdpZHRoOjE1MHB4O1xuICAgIHdpZHRoOjEwMCU7XG59XG5cbi5maWVsZC1mdWxsLXdpZHRoIHtcbiAgICB3aWR0aDoxMDAlO1xufSJdfQ== */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <section class='mat-typography'>\\n      <h3>Update Todo</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]='updateForm' class='edit-form'>\\n\\n      <mat-form-field class='field-full-width'>\\n        <input matInput placeholder='To Do Title' formControlName='title' #title>\\n      </mat-form-field>\\n\\n      <mat-divider></mat-divider>\\n      <br><br>\\n\\n      <button mat-raised-button color='accent' routerLink='/list'>Back</button>\\n      <button type='submit' (click)=\\\"updateTodo(title.value)\\\"\\n        [disabled]='updateForm.pristine || updateForm.invalid' mat-raised-button color='primary'>Save</button>\\n\\n    </form>\\n\\n  </mat-card>\\n</div>\"","\nimport { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../../todo';\nimport {Todo} from '../../todo.model';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  id:String;\n  todo: any = {};\n  updateForm: FormGroup;\n\n  constructor(private todoService: TodoService, private router:Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb:FormBuilder) { \n    this.createForm();\n  }\n\n  createForm(){\n    this.updateForm = this.fb.group({\n      title: ['', Validators.required],\n      isDone:''\n    });\n  }\n\n\n  ngOnInit() {\n    //populates the edit field\n    this.route.params.subscribe(params=> {\n      this.id = params.id;\n      this.todoService.getTodoById(this.id).subscribe(res => {\n        this.todo = res;\n        this.updateForm.get('title').setValue(this.todo.title);\n        this.updateForm.get('isDone').setValue(this.todo.isDone);\n      })\n    })\n  }\n\n  updateTodo(title, isDone){\n    this.todoService.updateTodo(this.id, title, isDone).subscribe(()=>{\n      this.snackBar.open('To do updated successfully', 'OK', {\n        duration:3000\n      });\n    });\n  };\n\n};\n","module.exports = \"table {\\n    width:100%\\n}\\n\\n.mat-column-right {\\n    text-align: center;\\n}\\n\\n.checkbox {\\n    margin-left:20px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tcG9uZW50cy9saXN0L2xpc3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJO0FBQ0o7O0FBRUE7SUFDSSxrQkFBa0I7QUFDdEI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEIiLCJmaWxlIjoic3JjL2FwcC9jb21wb25lbnRzL2xpc3QvbGlzdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xuICAgIHdpZHRoOjEwMCVcbn1cblxuLm1hdC1jb2x1bW4tcmlnaHQge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cblxuLmNoZWNrYm94IHtcbiAgICBtYXJnaW4tbGVmdDoyMHB4O1xufSJdfQ== */\"","module.exports = \"<div>\\n  <br>\\n  <mat-card>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=\\\"/create\\\">Create New Todo</button>\\n    <br><br>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <table mat-table [dataSource]=\\\"todos\\\">\\n      <ng-container matColumnDef=\\\"title\\\">\\n        <th mat-header-cell *matHeaderCellDef>Title</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">{{element.title}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"isDone\\\">\\n        <th mat-header-cell *matHeaderCellDef>Completed</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <mat-checkbox color=\\\"primary\\\" class='checkbox' [checked]='element.isDone' (click)='updateCheck(element._id, element.title, !element.isDone)'>\\n          </mat-checkbox>\\n        </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef class='mat-column-right'>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\" class='mat-column-right'>\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editTodo(element._id)\\\">Edit</button>\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"deleteTodo(element._id)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { TodoService } from '../../todo';\nimport { Router } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\nimport { Todo } from '../../todo.model';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  todos: Todo[];\n  displayedColumns: string[] = ['title', 'isDone', 'actions'];\n\n  constructor(private todoService: TodoService, private router: Router) { };\n\n  ngOnInit() {\n    this.fetchTodos();\n  };\n\n  fetchTodos() {\n    this.todoService.getTodos().subscribe((data: Todo[]) => {\n      this.todos = data;      \n      console.log('Data requested...');\n      console.log(this.todos);\n    });\n  };\n\n  editTodo(id) {\n    this.router.navigate([`/edit/${id}`]);\n  };\n\n  updateCheck(id, title, completed){\n    this.todoService.updateTodo(id, title, completed).subscribe((res)=>{\n      console.log(res)\n    })\n  }\n\n  deleteTodo(id) {\n    this.todoService.deleteTodo(id).subscribe(() => {\n      this.fetchTodos();\n    });\n  };\n\n\n};\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  uri = 'http://localhost:4000';\n\n  constructor(private http: HttpClient) { };\n\n  getTodos() {\n    return this.http.get(`${this.uri}/todos`);\n  };\n\n  getTodoById(id) {\n    return this.http.get(`${this.uri}/todo/${id}`);\n  };\n\n  addTodo(title) {\n    const todo = {\n      title: title\n    };\n    return this.http.post(`${this.uri}/todo/add`, todo);\n  };\n\n  updateTodo(id, title, isDone) {\n    const todo = {\n      title: title,\n      isDone: isDone\n    };\n    return this.http.post(`${this.uri}/todo/update/${id}`, todo);\n  };\n\n\n  deleteTodo(id){\n    return this.http.get(`${this.uri}/todo/delete/${id}`);\n  };\n\n};\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}